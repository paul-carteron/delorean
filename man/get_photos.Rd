% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_photos.R
\name{get_photos}
\alias{get_photos}
\title{Download and georeference photos}
\usage{
get_photos(
  source,
  outdir = NULL,
  mode = "raw",
  quiet = FALSE,
  overwrite = TRUE
)
}
\arguments{
\item{source}{\code{character}; url(s) build from \code{\link[=find_photos]{find_photos()}}.}

\item{outdir}{\code{character} or \code{NULL}; Directory where photos will be saved.
Defaults to \code{NULL}, in which case the package user overwrite directory
(\code{\link[tools:userdir]{tools::R_user_dir()}}) is used.}

\item{mode}{\code{character}; One of :
\itemize{
\item \code{"raw"} : download photos as-is, with no spatial reference.
\item \code{"gcp"} : download and attach Ground Control Points (GCPs).
The photo is georeferenced but not resampled onto a regular grid.
\item \code{"warp"} : download, georeference, and warp using GDAL.
The photo is resampled to a grid, ensuring compatibility with most
GIS software.
}}

\item{quiet}{\code{logical}. If \code{TRUE}, suppress progress messages. Default
to \code{FALSE}.}

\item{overwrite}{\code{logical}. If \code{TRUE}, existing files are overwritten.
Default to \code{FALSE}.}
}
\value{
\code{character}; filepaths of each photos
}
\description{
Download and georeference photos
}
\details{
Georeferencing performed by \code{"gcp"} or \code{"warp"} is only a first approximation,
based on the scale and orientation metadata provided with the scans.
This positioning can be \emph{significantly inaccurate}. For precise work,
users should refine the georeferencing manually in a GIS software.
To assist with manual georeferencing, see \code{\link[=get_georef_helpers]{get_georef_helpers()}}

The affine transformation is used, which means no geometric
deformation is applied beyond shift, rotation, and scale. All georeferenced
outputs are written in \strong{EPSG:3857 (Web Mercator)}.
}
\examples{
\dontrun{
library(sf)
library(terra)
x <- read_sf(system.file("extdata/penmarch.shp", package = "happign"))
image_metadata <- find_photos(x, 1969)
tmp <- tempdir()
photo <- get_photos(image_metadata$url[1], tmp)

plot(rast(photo))
}
}

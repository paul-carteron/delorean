[{"path":"https://paul-carteron.github.io/delorean/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 delorean authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://paul-carteron.github.io/delorean/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Carteron. Author, maintainer.","code":""},{"path":"https://paul-carteron.github.io/delorean/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carteron P (2025). delorean: Package (One Line, Title Case). R package version 0.0.0.9000.","code":"@Manual{,   title = {delorean: What the Package Does (One Line, Title Case)},   author = {Paul Carteron},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":"https://paul-carteron.github.io/delorean/index.html","id":"delorean-","dir":"","previous_headings":"","what":"R access to IGN historical aerial photo","title":"R access to IGN historical aerial photo","text":"goal delorean make easy explore, download georeference french historical aerial photo Remonter le temps - IGN.","code":""},{"path":"https://paul-carteron.github.io/delorean/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R access to IGN historical aerial photo","text":"can install development version delorean like :","code":"devtools::install_github(\"paul-carteron/delorean\")"},{"path":"https://paul-carteron.github.io/delorean/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R access to IGN historical aerial photo","text":"","code":"library(delorean) library(sf) #> Linking to GEOS 3.13.1, GDAL 3.11.0, PROJ 9.6.0; sf_use_s2() is TRUE library(terra) #> terra 1.8.70 library(happign) #> Please make sure you have an internet connection. #> Use happign::get_last_news() to display latest geoservice news."},{"path":"https://paul-carteron.github.io/delorean/index.html","id":"explore","dir":"","previous_headings":"Usage","what":"Explore","title":"R access to IGN historical aerial photo","text":"delorean allows exploration available aerial photos find_photos(). intersects bbox x (area interest) photo footprints. Additional filters can applied: year, color, oblique (see ?delorean::find_photos).","code":"x <- get_apicarto_cadastre(\"29158\") all_photos <- find_photos(x)  photos_1997 <- find_photos(x, year = 1997)  plot(st_geometry(photos_1997), col = \"grey90\", border = \"grey50\", main = \"1997 Photo footprints\") plot(st_geometry(x), col = \"firebrick\", add = TRUE)"},{"path":"https://paul-carteron.github.io/delorean/index.html","id":"download","dir":"","previous_headings":"Usage","what":"Download","title":"R access to IGN historical aerial photo","text":"downloading, use get_photos() source returned find_photos(). default, mode set raw, meaning image spatial reference.","code":"# Using photo numero = 430 for the sake of example photo_1997 <- photos_1997[photos_1997$numero == 430, ] url <- photo_1997$url  filepath <- get_photos(url, outdir = tempdir()) #> Downloading [1/1] 0...10...20...30...40...50...60...70...80...90...100 - done. photo <- rast(filepath) #> Warning: [rast] unknown extent  plot(photo)"},{"path":"https://paul-carteron.github.io/delorean/index.html","id":"georeference","dir":"","previous_headings":"Usage","what":"Georeference","title":"R access to IGN historical aerial photo","text":"Historical photos IGN provided centroid, resolution, orientation. , default georeferencing can performed — aware significantly inaccurate ! (shown ). get_photos() offers two modes: gcp warp. gcp mode attaches Ground Control Points (GCPs), photo georeferenced resampled onto regular grid. warp mode takes longer resamples photo grid, ensuring compatibility GIS software.","code":"filepath <- get_photos(url, outdir = \"C:\\\\Users\\\\PaulCarteron\\\\Desktop\\\\temp\\\\dolorean\", mode = \"warp\") #>  #>  #> Downloading [1/1] 0...10...20...30...40...50...60...70...80...90...100 - done. #> Warping [1/1] #> Warning in .warp(src_datasets, dst_filename, list(), t_srs, cl_arg, quiet): GDAL FAILURE 1: Deleting C:\\Users\\PaulCarteron\\Desktop\\temp\\dolorean/IGNF_PVA_1-0__1997-04-10__CA97S00621_1997_F0517-0520_0430.tif failed: #> Permission denied #> 0...10...20...30...40...50...60...70...80...90...100 - done. photo <- rast(filepath)  plot(photo) plot(project(vect(x), crs(photo)), border = \"red\", lwd = 2, add = T)"},{"path":"https://paul-carteron.github.io/delorean/index.html","id":"georeference-help","dir":"","previous_headings":"Usage","what":"Georeference Help","title":"R access to IGN historical aerial photo","text":"default georeferencing remains significantly inaccurate, delorean provides helpers support manual georeferencing function get_georef_helpers(). wrapper around happign::get_wfs() downloads prominent features can assist georeferencing, hydrological elements, infrastructure, roads, buildings. layers retrieved IGN’s BD TOPO® V3 dataset.","code":"georef_helpers <- get_georef_helpers(x, \"infra\", \"other\") #> Features downloaded : 81 #> Features downloaded : 32 #> Warning: No data found, NULL is returned. #> Features downloaded : 19  plot(project(vect(x), crs(photo)), col = \"grey90\", border = \"grey50\", main = \"Georef helpers on Penmarc'h\") plot(vect(georef_helpers$construction_lineaire), lwd = 2, col = \"forestgreen\", add = TRUE) plot(vect(georef_helpers$construction_ponctuelle), col = \"firebrick\", add = TRUE) plot(vect(georef_helpers$point_de_repere), col = \"royalblue\", add = TRUE)"},{"path":"https://paul-carteron.github.io/delorean/reference/find_photos.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve image metadata — find_photos","title":"Retrieve image metadata — find_photos","text":"Retrieve image metadata","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/find_photos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve image metadata — find_photos","text":"","code":"find_photos(x, year = NULL, color = c(\"P\", \"C\", \"IR\", \"IRC\"), oblique = FALSE)"},{"path":"https://paul-carteron.github.io/delorean/reference/find_photos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve image metadata — find_photos","text":"x Object class sf sfc year integer; multiple years can set vector c(1980, 1990) range 1980:2990. NULL years available returned color character; One many \"P\" (black white), \"C\" (color), \"IR\" (infra-red) \"IRC\" (infra-red color). default. oblique logical; FALSE vertical aerial photos (camera pointing straight ), TRUE oblique  photos. Use NA NULL retrieve type.","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/find_photos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve image metadata — find_photos","text":"sf photo extent metadata","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/find_photos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve image metadata — find_photos","text":"default, get_image_metadata retrieve photo extent. Centroid photo contained dataset form x_3857, y_3857. leverage can replace actual geometry one. See @examples.","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/find_photos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve image metadata — find_photos","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) x <- read_sf(system.file(\"extdata/penmarch.shp\", package = \"happign\")) images_metadata <- find_photos(x, year = 1969)  # Access centroids centroid <- st_as_sf(   st_drop_geometry(images_metadata),   coords = c(\"x_3857\", \"y_3857\"),   crs = st_crs(3857) ) centroid <- st_transform(centroid, 4326)  plot(st_geometry(images_metadata[1,]), col = \"grey80\", border = \"grey60\", main = \"Photo footprint and centroid\") plot(st_geometry(images_centroid[1,]), col = \"blue\", pch = 20, add = TRUE) plot(st_geometry(x), col = \"red\", add = TRUE) } # }"},{"path":"https://paul-carteron.github.io/delorean/reference/get_georef_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Download BDTOPO helper layers for manual georeferencing — get_georef_helpers","title":"Download BDTOPO helper layers for manual georeferencing — get_georef_helpers","text":"Download BDTOPO helper layers manual georeferencing","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/get_georef_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download BDTOPO helper layers for manual georeferencing — get_georef_helpers","text":"","code":"get_georef_helpers(x, ..., filename = NULL, crs = 3857)"},{"path":"https://paul-carteron.github.io/delorean/reference/get_georef_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download BDTOPO helper layers for manual georeferencing — get_georef_helpers","text":"x Object class sf sfc ... category names select helper layers download: \"hydro\": hydrography (nodes, river segments, lake, pond…) \"road\": roads railway lines) \"infra\": linear / point / surface infrastructure \"building\": building footprints \"\": miscellaneous landmarks (e.g. reference points) filename character NULL; optional path file. supplied, downloaded layers written single GeoPackage location. Extension automatically forced .gpkg. crs numeric character; crs convert layers , see sf::st_transform","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/get_georef_helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download BDTOPO helper layers for manual georeferencing — get_georef_helpers","text":"named list sf objects.","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/get_georef_helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download BDTOPO helper layers for manual georeferencing — get_georef_helpers","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) x <- read_sf(system.file(\"extdata/penmarch.shp\", package = \"happign\")) hydro <- get_georef_helpers(x, \"hydro\") all <- get_georef_helpers(x)  gpkg <- tempfile(fileext = \".gpkg\") save_to_gpkg <- get_georef_helpers(x, \"road\", \"hydro\", filename = gpkg) } # }"},{"path":"https://paul-carteron.github.io/delorean/reference/get_photos.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and georeference photos — get_photos","title":"Download and georeference photos — get_photos","text":"Download georeference photos","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/get_photos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and georeference photos — get_photos","text":"","code":"get_photos(   source,   outdir = NULL,   mode = \"raw\",   quiet = FALSE,   overwrite = TRUE )"},{"path":"https://paul-carteron.github.io/delorean/reference/get_photos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and georeference photos — get_photos","text":"source character; url(s) build find_photos(). outdir character NULL; Directory photos saved. Defaults NULL, case package user overwrite directory (tools::R_user_dir()) used. mode character; One : \"raw\" : download photos -, spatial reference. \"gcp\" : download attach Ground Control Points (GCPs). photo georeferenced resampled onto regular grid. \"warp\" : download, georeference, warp using GDAL. photo resampled grid, ensuring compatibility GIS software. quiet logical. TRUE, suppress progress messages. Default FALSE. overwrite logical. TRUE, existing files overwritten. Default FALSE.","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/get_photos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and georeference photos — get_photos","text":"character; filepaths photos","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/get_photos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and georeference photos — get_photos","text":"Georeferencing performed \"gcp\" \"warp\" first approximation, based scale orientation metadata provided scans. positioning can significantly inaccurate. precise work, users refine georeferencing manually GIS software. assist manual georeferencing, see get_georef_helpers() affine transformation used, means geometric deformation applied beyond shift, rotation, scale. georeferenced outputs written EPSG:3857 (Web Mercator).","code":""},{"path":"https://paul-carteron.github.io/delorean/reference/get_photos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and georeference photos — get_photos","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) library(terra) x <- read_sf(system.file(\"extdata/penmarch.shp\", package = \"happign\")) image_metadata <- find_photos(x, 1969) tmp <- tempdir() photo <- get_photos(image_metadata$url[1], tmp)  plot(rast(photo)) } # }"}]
